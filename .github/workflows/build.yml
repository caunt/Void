name: ".NET Build"
permissions:
  contents: write
  pull-requests: write
  issues: write

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-arm
          - os: ubuntu-latest
            runtime: linux-arm64
          - os: ubuntu-latest
            runtime: linux-bionic-arm64
          - os: ubuntu-latest
            runtime: linux-bionic-x64
          - os: ubuntu-latest
            runtime: linux-musl-arm
          - os: ubuntu-latest
            runtime: linux-musl-arm64
          - os: ubuntu-latest
            runtime: linux-musl-x64
          - os: ubuntu-latest
            runtime: linux-x64
          - os: macos-latest
            runtime: osx-arm64
          - os: macos-latest
            runtime: osx-x64
          - os: windows-latest
            runtime: win-arm64
          - os: windows-latest
            runtime: win-x64
          - os: windows-latest
            runtime: win-x86
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "10"
          dotnet-quality: "preview"
      - name: Restore dependencies
        run: dotnet restore --runtime ${{ matrix.runtime }}
      - name: Build
        run: dotnet build --runtime ${{ matrix.runtime }} --self-contained --configuration Release --no-restore /p:DebugType=embedded /p:PublishSingleFile=true /p:GenerateRuntimeConfigurationFiles=false
      - name: Test
        run: dotnet test --runtime ${{ matrix.runtime }} --no-build --verbosity normal
      - name: Publish
        run: dotnet publish --runtime ${{ matrix.runtime }} --self-contained src/Platform --output artifacts --configuration Release --no-build /p:DebugType=embedded /p:PublishSingleFile=true /p:GenerateRuntimeConfigurationFiles=false
      - name: Save Artifact Suffix
        id: get_suffix
        shell: bash
        run: echo "result=$([[ $OSTYPE == msys* ]] && echo .exe)" >> "$GITHUB_OUTPUT"
      - name: Rename Artifact
        shell: bash
        run: mv artifacts/Void.Proxy${{ steps.get_suffix.outputs.result }} artifacts/void-${{ matrix.runtime }}${{ steps.get_suffix.outputs.result }}
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: void-${{ matrix.runtime }}${{ steps.get_suffix.outputs.result }}
          path: artifacts/void-${{ matrix.runtime }}${{ steps.get_suffix.outputs.result }}
          compression-level: 9
          if-no-files-found: error
