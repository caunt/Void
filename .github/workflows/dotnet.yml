# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

permissions:
  contents: write
  pull-requests: write
  issues: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-arm
          - os: ubuntu-latest
            runtime: linux-arm64
          - os: ubuntu-latest
            runtime: linux-bionic-arm64
          - os: ubuntu-latest
            runtime: linux-bionic-x64
          - os: ubuntu-latest
            runtime: linux-musl-arm
          - os: ubuntu-latest
            runtime: linux-musl-arm64
          - os: ubuntu-latest
            runtime: linux-musl-x64
          - os: ubuntu-latest
            runtime: linux-x64
          - os: macos-latest
            runtime: osx-arm64
          - os: macos-latest
            runtime: osx-x64
          - os: windows-latest
            runtime: win-arm64
          - os: windows-latest
            runtime: win-x64
          - os: windows-latest
            runtime: win-x86
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9'
    
    - name: Restore dependencies
      run: dotnet restore --runtime ${{ matrix.runtime }}
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Build Platform
      run: dotnet build src/Platform --runtime ${{ matrix.runtime }} --self-contained -p:GenerateRuntimeConfigurationFiles=false -p:PublishSingleFile=true -p:DebugType=embedded --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --runtime ${{ matrix.runtime }} --no-build --verbosity normal
    
    - name: Publish
      run: dotnet publish --runtime ${{ matrix.runtime }} --self-contained -p:GenerateRuntimeConfigurationFiles=false -p:PublishSingleFile=true -p:DebugType=embedded src/Platform --output artifacts --configuration Release --no-build
      
    - name: Save Artifact Suffix
      id: get_suffix
      shell: bash
      run: echo "result=$([[ $OSTYPE == msys* ]] && echo .exe)" >> "$GITHUB_OUTPUT"
        
    - name: Rename Artifact
      shell: bash
      run: mv artifacts/Void.Proxy${{ steps.get_suffix.outputs.result }} artifacts/void-${{ matrix.runtime }}${{ steps.get_suffix.outputs.result }}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: void-${{ matrix.runtime }}${{ steps.get_suffix.outputs.result }}
        path: artifacts/void-${{ matrix.runtime }}${{ steps.get_suffix.outputs.result }}
        compression-level: 9
        if-no-files-found: error

  Release:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/RELEASE_PLEASE/config.json
          manifest-file: .github/RELEASE_PLEASE/manifest.json

      - name: Upload Release Artifacts
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} artifacts/*
