name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  Build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-arm
          - os: ubuntu-latest
            runtime: linux-arm64
          - os: ubuntu-latest
            runtime: linux-bionic-arm64
          - os: ubuntu-latest
            runtime: linux-bionic-x64
          - os: ubuntu-latest
            runtime: linux-musl-arm
          - os: ubuntu-latest
            runtime: linux-musl-arm64
          - os: ubuntu-latest
            runtime: linux-musl-x64
          - os: ubuntu-latest
            runtime: linux-x64
          - os: macos-latest
            runtime: osx-arm64
          - os: macos-latest
            runtime: osx-x64
          - os: windows-latest
            runtime: win-arm64
          - os: windows-latest
            runtime: win-x64
          - os: windows-latest
            runtime: win-x86
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9'
    
    - name: Restore dependencies
      run: dotnet restore --runtime ${{ matrix.runtime }}
    
    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Build Platform
      run: dotnet build src/Platform --runtime ${{ matrix.runtime }} --self-contained -p:GenerateRuntimeConfigurationFiles=false -p:PublishSingleFile=true -p:DebugType=embedded --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --runtime ${{ matrix.runtime }} --no-build --verbosity normal

    - name: Publish Platform
      run: dotnet publish src/Platform --runtime ${{ matrix.runtime }} --self-contained -p:GenerateRuntimeConfigurationFiles=false -p:PublishSingleFile=true -p:DebugType=embedded --output artifacts/${{ matrix.runtime }} --configuration Release --no-build

    - name: Rename artifact file & set artifact path
      id: artifact
      shell: pwsh
      run: |
        $ext = if ($env:RUNNER_OS -eq 'Windows') { ".exe" } else { "" }
        Rename-Item -Path "artifacts/${{ matrix.runtime }}/Void.Proxy$ext" -NewName "void$ext"
        echo "artifact=artifacts/${{ matrix.runtime }}/void$ext" >> $GITHUB_OUTPUT

    - name: Upload Build Artifact
      id: upload_artifact
      uses: actions/upload-artifact@v4
      with:
        name: void-${{ matrix.runtime }}
        path: ${{ steps.artifact.outputs.artifact }}
        compression-level: 9
        if-no-files-found: error

    - name: Echo Download URL
      run: "echo Download URL: ${{ steps.upload_artifact.outputs.artifact-url }}"