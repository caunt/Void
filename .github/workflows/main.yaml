name: ".NET Build"
    
permissions:
  contents: write
  pull-requests: write
  issues: write
  pages: write
  id-token: write

on:
  workflow_dispatch:
    inputs:
      dotnet-version:
        description: "Full version of .NET SDK"
        required: false
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOTNET_VERSION: ${{ github.event.inputs.dotnet-version || '10.0.100-preview.4.25258.110' }}

jobs:
  release-dev:
    environment: release-dev
    runs-on: ubuntu-latest
    outputs:
      dotnet-version: ${{ steps.dotnet-version.outputs.result }}
      void-fallback-version: ${{ steps.void-fallback-version.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - name: Set .NET SDK version
        id: dotnet-version
        run: |
          echo "result=$DOTNET_VERSION" >> $GITHUB_OUTPUT
      - name: Set Void fallback version
        id: void-fallback-version
        run: |
          base=$(jq -r '.["."]' .github/RELEASE_PLEASE/manifest.json)
          sha=$(git rev-parse --short HEAD)
          echo "result=${base}+${sha}" >> $GITHUB_OUTPUT

  dotnet-build:
    needs: release-dev
    uses: ./.github/workflows/dotnet.yaml
    with:
      dotnet-version: ${{ needs.release-dev.outputs.dotnet-version }}
      void-version: ${{ needs.release-dev.outputs.void-fallback-version }}

  release-please:
    environment: release-please
    needs: dotnet-build
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.version }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/RELEASE_PLEASE/config.json
          manifest-file: .github/RELEASE_PLEASE/manifest.json

  github-push:
    needs: [dotnet-build,release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: Compress Plugin DevKit
        run: zip -r -9 artifacts/plugin-devkit.zip pdk
      - name: Upload Release Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ needs.release-please.outputs.tag_name }} artifacts/plugin*
          gh release upload ${{ needs.release-please.outputs.tag_name }} artifacts/void*

  docker:
    needs: [dotnet-build,release-dev]
    uses: ./.github/workflows/docker.yaml
    with:
      dotnet-version: ${{ needs.release-dev.outputs.dotnet-version }}
      void-version: ${{ needs.release-dev.outputs.void-fallback-version }}

  nuget-push:
    environment: nuget-push
    needs: [dotnet-build,release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Build
        run: dotnet build --configuration Release /p:Version=${{ needs.release-please.outputs.version }}
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Pack Api
        run: dotnet pack src/Api --configuration Release --output artifacts /p:Version=${{ needs.release-please.outputs.version }}
      - name: Pack Minecraft
        run: dotnet pack src/Minecraft --configuration Release --output artifacts /p:Version=${{ needs.release-please.outputs.version }}
      - name: Rename Artifacts
        shell: bash
        run: mv artifacts/*Api* artifacts/api.nupkg && mv artifacts/*Minecraft* artifacts/minecraft.nupkg
      - name: NuGet Push
        run: dotnet nuget push artifacts/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
      - name: Upload a Pack Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: artifacts
          compression-level: 9
          if-no-files-found: error

  docs-astro-push:
    environment:
      name: docs-astro-push
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5
      - name: Install, build, and upload documentation site
        uses: withastro/action@v4
        with:
          path: docs/astro
      - name: Deploy GitHub Pages site
        uses: actions/deploy-pages@v4

  docs-docfx-bug-test:
    environment: docs-docfx-bug-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Setup DocFX
        run: dotnet tool update -g docfx
      - name: Build with DocFX
        run: docfx docs/docfx/docfx.json --verbose
        continue-on-error: true
